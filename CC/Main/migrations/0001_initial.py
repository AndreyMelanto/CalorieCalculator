# Generated by Django 5.1.2 on 2024-11-13 22:15

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='NutritionalValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=100, verbose_name='Продукт')),
                ('calories', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Калорийность')),
                ('proteins', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Белки')),
                ('fats', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Жиры')),
                ('carbohydrates', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Углеводы')),
                ('is_product', models.BooleanField(default=True, verbose_name='Является продуктом')),
            ],
            options={
                'verbose_name': 'Пищевая ценность продукта',
                'verbose_name_plural': 'Пищевая ценность продуктов',
            },
        ),
        migrations.CreateModel(
            name='TelegramId',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('tg_id', models.IntegerField()),
            ],
            options={
                'verbose_name': 'Телеграм привязка',
                'verbose_name_plural': 'Телеграм привязки',
            },
        ),
        migrations.CreateModel(
            name='Recipes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=70)),
                ('description', models.TextField()),
                ('ingredients', models.TextField()),
                ('time', models.TimeField()),
                ('steps', models.TextField()),
                ('nutritional_value', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, to='Main.nutritionalvalue')),
            ],
            options={
                'verbose_name': 'Рецепт',
                'verbose_name_plural': 'Рецепты',
            },
        ),
        migrations.CreateModel(
            name='Images',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.IntegerField()),
                ('image', models.ImageField(upload_to='static/images_db/for_recipes')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.recipes')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='SavedProducts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('count', models.IntegerField(verbose_name='Масса продукта')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Main.nutritionalvalue', verbose_name='Продукт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Продукт пользователя',
                'verbose_name_plural': 'Продукты пользователей',
            },
        ),
    ]
